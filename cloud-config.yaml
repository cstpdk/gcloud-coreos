#cloud-config

coreos:
  etcd:
      #generate a new token for each unique cluster from https://discovery.etcd.io/new
      discovery: https://discovery.etcd.io/024804180afd9c9e1b5da774c7592526
      addr: $private_ipv4:4001
      peer-addr: $private_ipv4:7001
  units:
    - name: etcd.service
      command: start
    - name: fleet.service
      command: start
    - name: docker.service
      command: start
      content: |
        [Unit]
        Description=Docker Application Container Engine 
        Documentation=http://docs.docker.io

        [Service]
        Environment="TMPDIR=/var/tmp/"
        ExecStartPre=/bin/mount --make-rprivate /
        LimitNOFILE=1048576
        LimitNPROC=1048576
        ExecStart=/usr/bin/docker -d --bip=172.17.42.1/16 -s=btrfs -r=false -H fd:// --dns 172.17.42.1 --dns 8.8.8.8
        Restart=always

        [Install]
        WantedBy=multi-user.target
    - name: discoverer.service
      command: start
      content: |
        [Unit]
        Description=Service discoverer
        Requires=docker.service

        [Service]
        TimeoutStartSec=0
        EnvironmentFile=/etc/environment
        ExecStartPre=/usr/bin/docker pull cstpdk/haproxy-confd
        ExecStart=/usr/bin/docker run \
          -p 80:80 -p 81:81 \
          -p 5432:5432 -p 6379:6379 \
          -p 5433:5433 -p 6380:6380 \
          -p 5434:5434 -p 6381:6381 \
          --name discoverer \
          cstpdk/haproxy-confd -node=${COREOS_PRIVATE_IPV4}:4001 -interval=30
        ExecStop=/usr/bin/docker stop -t 2 discoverer
        ExecStop=/usr/bin/docker rm -v -f discoverer
        Restart=always
    - name: servicesinit.service
      command: start
      runtime: yes
      content: |
        [Unit]
        Description=Init some services
        Requires=etcd.service

        [Service]
        Type=oneshot
        ExecStart=/usr/bin/etcdctl mkdir /services
    - name: dnsmasq.service
      command: start
      content: |
        [Unit]
        Description=Local dns
        Requires=docker.service

        [Service]
        TimeoutStartSec=0
        ExecStartPre=/usr/bin/docker pull cstpdk/dnsmasq
        ExecStart=/usr/bin/docker run -p 53:53/udp --name dnsmasq cstpdk/dnsmasq
        ExecStop=/usr/bin/docker stop -t 2 dnsmasq
        ExecStop=/usr/bin/docker rm -v -f dnsmasq
        Restart=always
write_files:
  - path: /etc/resolv.conf
    permissions: '0644'
    content: |
      nameserver 172.17.42.1
      nameserver 8.8.8.8
  - path: /home/core/remove-from-cluster
    permissions: '0744'
    owner: core:core
    content: |
      curl -L http://127.0.0.1:7001/v2/admin/machines/`cat /etc/machine-id` -XDELETE
  - path: /home/core/update
    permissions: '0744'
    owner: core:core
    content: |
      #!/bin/bash

      service="$1"
      re="^""$service@"

      current_max=0

      for i in $(fleetctl list-units | grep -Eo "$re""[[:digit:]]+.service" | grep -Eo [[:digit:]]+) ; do
              if [ $i -gt $current_max ] ; then
                      current_max=$i
              fi
      done

      echo "Current max: $current_max"

      n=$(fleetctl list-units | grep -E "$re" | wc -l)
      echo "Found $n currently running"
      let "m=2*n"
      if [ $m -eq 0 ] ; then
              m=1
      fi

      echo "Aiming for $m"

      for ((i=n;i<m;i++)) ; do
              let "number=i+current_max"
              echo "Starting $service@$number"
              fleetctl start "$service@$number"
      done

      until [ $(fleetctl list-units | grep -E "$re" | grep "running" | wc -l) -eq $m ] ; do
              sleep 1
              echo "Waiting"
              # Maybe timeout for fallback?
      done

      for ((i=n;i<m;i++)) ; do
              let "number=i+current_max"
              fleetctl start "$service""_presence@$number"
      done

      for ((i=current_max;i>0;i--)) ; do
              let "number=i"
              echo "Destroying $number"
              fleetctl stop "$service@$number"
              fleetctl stop "$service""_presence@$number"

              fleetctl destroy "$service""_presence@$number"
              fleetctl destroy "$service@$number"
      done

      echo "Updated"
