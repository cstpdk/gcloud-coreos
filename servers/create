#!/bin/bash

usage(){
	cat << EOF
Create machines on google compute engine

Usage: $0 type name

Where type is one of container or core of
	container is container optimized google image
	core is a coreos node
EOF
}

dir=$(cd $(dirname "$0") && cd .. && pwd)
source $dir/variables.sh

core_machine_type=${GCLOUD_MACHINE_TYPE:-"n1-standard-1"}

coreos_image=https://www.googleapis.com/compute/v1/projects/coreos-cloud/global/images/coreos-stable-522-5-0-v20150114
container_image=https://www.googleapis.com/compute/v1/projects/google-containers/global/images/container-vm-v20150112

create_core(){
	"$dir"/gcloud compute instances create $@ \
		--image=$coreos_image \
		--zone=$GCLOUD_ZONE --machine-type=$core_machine_type \
		--boot-disk-size 50GB \
		--metadata-from-file user-data="/cloud-config.yaml" \
		--scopes compute-rw storage-ro
}

create_container(){
	"$dir"/gcloud compute instances create "$1" \
		--image $container_image \
		--zone $GCLOUD_ZONE \
		--machine-type g1-small
}

create_registry(){
	$dir/gcloud compute instances create registry \
		--image $container_image \
		--zone=$GCLOUD_ZONE --machine-type=g1-small \
		--scopes storage-rw \
		--metadata-from-file startup-script="/scripts/start_registry.sh"
}

create_db(){
	if [ $# -lt 4 ] ; then
		echo "Usage: $0 db servername dbname user password"
		exit 1
	fi

	sed -i "s/POSTGRESQL_DB=\w*/POSTGRESQL_DB=$2/g" $dir/scripts/start_pg.sh
	sed -i "s/POSTGRESQL_USER=\w*/POSTGRESQL_USER=$3/g" $dir/scripts/start_pg.sh
	sed -i "s/POSTGRESQL_PASS=\w*/POSTGRESQL_PASS=$4/g" $dir/scripts/start_pg.sh

	# Create a disk
	$dir/gcloud compute disks create --zone $GCLOUD_ZONE --size 20 "$1"dbdisk

	# And an instance
	$dir/gcloud compute instances create "$1"db \
		--image $container_image \
		--zone=$GCLOUD_ZONE --machine-type=f1-micro \
		--disk name="$1"dbdisk \
		--metadata-from-file startup-script="scripts/start_pg.sh"
}

create_jenkins(){
	# Create a disk
	$dir/gcloud compute disks create --zone $GCLOUD_ZONE --size 50 jenkinsdisk

	# And an instance
	$dir/gcloud compute instances create jenkins \
		--image $container_image \
		--zone=$GCLOUD_ZONE --machine-type=g1-small \
		--disk name=jenkinsdisk \
		--scopes storage-rw \
		--metadata-from-file startup-script="scripts/run_jenkins.sh"
}

case "$1" in
	container|core|registry|db|jenkins) create_"$1" "${@:2}";;
	*) usage ;;
esac

